{
  "filename": "guestbook.md",
  "__html": "<h1>Guestbook</h1>\n<p>This tutorial walks through an example to deploy a redis cluster(1 master, 2 slaves) and a guestbook app and do in-place\nupdate of the guestbook app using Kruise controllers. The guestbook app used is from this <a href=\"https://github.com/IBM/guestbook/tree/master/v1\">repo</a>.\nBelow steps assume you have an existing kubernetes cluster running properly.</p>\n<h2>Install Kruise CRDs</h2>\n<pre><code>kubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/config/crds/apps_v1alpha1_broadcastjob.yaml\nkubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/config/crds/apps_v1alpha1_sidecarset.yaml\nkubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/config/crds/apps_v1alpha1_statefulset.yaml\n</code></pre>\n<h2>Install kruise-manager</h2>\n<p><code>kubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/config/manager/all_in_one.yaml</code></p>\n<h2>Install redis</h2>\n<pre><code>kubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/redis-master-deployment.yaml\nkubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/redis-master-service.yaml\nkubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/redis-slave-deployment.yaml\nkubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/redis-slave-service.yaml\n</code></pre>\n<h2>Install Guestbook sidecarset</h2>\n<p>The sidecarset controller is a webhook controller and will watch pod creation and automatically inject a sidecar guestbook container into the matched pods</p>\n<p><code>kubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/guestbook-sidecar.yaml</code></p>\n<p>Below is how the sidecarset looks like:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n<span class=\"hljs-attr\">  name:</span> <span class=\"hljs-string\">guestbook-sidecar</span>\n<span class=\"hljs-attr\">spec:</span>\n<span class=\"hljs-attr\">  selector:</span> <span class=\"hljs-comment\"># select the pods to be injected with sidecar containers</span>\n<span class=\"hljs-attr\">    matchLabels:</span>\n<span class=\"hljs-attr\">      app:</span> <span class=\"hljs-string\">guestbook</span>\n<span class=\"hljs-attr\">  containers:</span>\n<span class=\"hljs-attr\">    - name:</span> <span class=\"hljs-string\">guestbook-sidecar</span>\n<span class=\"hljs-attr\">      image:</span> <span class=\"hljs-string\">openkruise/guestbook:sidecar</span>\n<span class=\"hljs-attr\">      imagePullPolicy:</span> <span class=\"hljs-string\">Always</span>\n<span class=\"hljs-attr\">      ports:</span>\n<span class=\"hljs-attr\">        - name:</span> <span class=\"hljs-string\">sidecar-server</span>\n<span class=\"hljs-attr\">          containerPort:</span> <span class=\"hljs-number\">4000</span> <span class=\"hljs-comment\"># different from main guestbook containerPort which is 3000</span>\n</code></pre>\n<h2>Install Guestbook</h2>\n<p>This will create an Advanced StatefulSet with guestbook containers.</p>\n<pre><code>kubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/guestbook-statefulset.yaml\nkubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/guestbook-service.yaml\n</code></pre>\n<p>Several things to note in the <code>guestbook-statefulset.yaml</code></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">*</span> <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>  <span class=\"hljs-comment\"># the kruise group version</span>\n<span class=\"hljs-attr\">  kind:</span> <span class=\"hljs-string\">StatefulSet</span>\n  <span class=\"hljs-string\">...</span>\n<span class=\"hljs-attr\">    spec:</span>\n<span class=\"hljs-string\">*</span>     <span class=\"hljs-attr\">readinessGates:</span>\n<span class=\"hljs-string\">*</span>        <span class=\"hljs-comment\"># A new condition must be added to ensure the pod remain at NotReady state while the in-place update is happening</span>\n<span class=\"hljs-string\">*</span>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">conditionType:</span> <span class=\"hljs-string\">InPlaceUpdateReady</span>\n<span class=\"hljs-attr\">      containers:</span>\n<span class=\"hljs-attr\">      - name:</span> <span class=\"hljs-string\">guestbook</span>\n<span class=\"hljs-attr\">        image:</span> <span class=\"hljs-string\">openkruise/guestbook:v1</span>\n<span class=\"hljs-attr\">        ports:</span>\n<span class=\"hljs-attr\">        - name:</span> <span class=\"hljs-string\">http-server</span>\n<span class=\"hljs-attr\">          containerPort:</span> <span class=\"hljs-number\">3000</span>\n<span class=\"hljs-string\">*</span>    <span class=\"hljs-attr\">podManagementPolicy:</span> <span class=\"hljs-string\">Parallel</span>  <span class=\"hljs-comment\"># allow parallel updates, works together with maxUnavailable</span>\n<span class=\"hljs-string\">*</span>    <span class=\"hljs-attr\">updateStrategy:</span>\n<span class=\"hljs-string\">*</span>       <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n<span class=\"hljs-string\">*</span>       <span class=\"hljs-attr\">rollingUpdate:</span>\n<span class=\"hljs-string\">*</span>         <span class=\"hljs-comment\"># Do in-place update if possible, currently only image update is supported for in-place update</span>\n<span class=\"hljs-string\">*</span>         <span class=\"hljs-attr\">podUpdatePolicy:</span> <span class=\"hljs-string\">InPlaceIfPossible</span>\n<span class=\"hljs-string\">*</span>         <span class=\"hljs-comment\"># Allow parallel updates with max number of unavailable instances equals to 3</span>\n<span class=\"hljs-string\">*</span>         <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">3</span>\n</code></pre>\n<p>Check the guestbook are started. <code>statefulset.apps.kruise.io</code> or shortname <code>sts.apps.kruise.io</code> is the resource kind.\n<code>app.kruise.io</code> postfix needs to be appended due to naming collision with Kubernetes native <code>statefulset</code> kind.\nVerify that all pods are READY.</p>\n<pre><code>kubectl get sts.apps.kruise.io\n\nNAME           DESIRED   CURRENT   UPDATED   READY   AGE\nguestbook-v1   20        20        20        20      6m\n</code></pre>\n<p>Describe one Guestbook pod\n<code>kubectl describe pod guestbook-v1-0</code></p>\n<p>Find that the sidecar container is injected.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">    Containers:</span>\n<span class=\"hljs-attr\">      guestbook:</span>\n        <span class=\"hljs-string\">Container</span> <span class=\"hljs-attr\">ID:</span>   <span class=\"hljs-attr\">docker://44f19a140c30de2c5b1a3f63c252c074efbb9c1b5eb7893ee7134461466b35c8</span>\n<span class=\"hljs-attr\">        Image:</span>          <span class=\"hljs-string\">openkruise/guestbook:v1</span>\n        <span class=\"hljs-string\">Image</span> <span class=\"hljs-attr\">ID:</span>       <span class=\"hljs-attr\">docker-pullable://openkruise/guestbook@sha256:a5b6e5462982ca795fa9c7ddc378ea5b24a31e5d57eb806095526f7b21384dbd</span>\n<span class=\"hljs-attr\">        Port:</span>           <span class=\"hljs-number\">3000</span><span class=\"hljs-string\">/TCP</span>\n        <span class=\"hljs-string\">Host</span> <span class=\"hljs-attr\">Port:</span>      <span class=\"hljs-number\">0</span><span class=\"hljs-string\">/TCP</span>\n<span class=\"hljs-attr\">        State:</span>          <span class=\"hljs-string\">Running</span>\n<span class=\"hljs-attr\">          Started:</span>      <span class=\"hljs-string\">Wed,</span> <span class=\"hljs-number\">19</span> <span class=\"hljs-string\">Jun</span> <span class=\"hljs-number\">2019</span> <span class=\"hljs-number\">17</span><span class=\"hljs-string\">:30:29</span> <span class=\"hljs-string\">+0800</span>\n<span class=\"hljs-attr\">        Ready:</span>          <span class=\"hljs-literal\">True</span>\n        <span class=\"hljs-string\">Restart</span> <span class=\"hljs-attr\">Count:</span>  <span class=\"hljs-number\">0</span>\n<span class=\"hljs-attr\">        Environment:</span>    <span class=\"hljs-string\">&lt;none&gt;</span>\n<span class=\"hljs-attr\">        Mounts:</span>\n          <span class=\"hljs-string\">/var/run/secrets/kubernetes.io/serviceaccount</span> <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">default-token-k5qpw</span> <span class=\"hljs-string\">(ro)</span>\n<span class=\"hljs-string\">+</span>     <span class=\"hljs-attr\">guestbook-sidecar:</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-string\">Container</span> <span class=\"hljs-attr\">ID:</span>   <span class=\"hljs-attr\">docker://cbc379ce84624d9801928d5b2f1f2739e24094b440c55d62f7e0892eb31b0719</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">Image:</span>          <span class=\"hljs-string\">openkruise/guestbook:sidecar</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-string\">Image</span> <span class=\"hljs-attr\">ID:</span>       <span class=\"hljs-attr\">docker-pullable://openkruise/guestbook@sha256:016eddf673cc7afc5da2fa96b5148161b521cff20583fb1d0c3aa44e6ac75272</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">Port:</span>           <span class=\"hljs-number\">4000</span><span class=\"hljs-string\">/TCP</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-string\">Host</span> <span class=\"hljs-attr\">Port:</span>      <span class=\"hljs-number\">0</span><span class=\"hljs-string\">/TCP</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">State:</span>          <span class=\"hljs-string\">Running</span>\n<span class=\"hljs-string\">+</span>         <span class=\"hljs-attr\">Started:</span>      <span class=\"hljs-string\">Wed,</span> <span class=\"hljs-number\">19</span> <span class=\"hljs-string\">Jun</span> <span class=\"hljs-number\">2019</span> <span class=\"hljs-number\">17</span><span class=\"hljs-string\">:30:45</span> <span class=\"hljs-string\">+0800</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">Ready:</span>          <span class=\"hljs-literal\">True</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-string\">Restart</span> <span class=\"hljs-attr\">Count:</span>  <span class=\"hljs-number\">0</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">Environment:</span>\n<span class=\"hljs-string\">+</span>         <span class=\"hljs-attr\">IS_INJECTED:</span>  <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">Mounts:</span>         <span class=\"hljs-string\">&lt;none&gt;</span>\n</code></pre>\n<h2>View the Guestbook</h2>\n<p>You can now view the Guestbook on browser.</p>\n<ul>\n<li>\n<p><strong>Local Host:</strong>\nIf you are running Kubernetes locally, to view the guestbook, navigate to <code>http://localhost:3000</code> for the main guestbook\nand <code>http://localhost:4000</code> for the sidecar guestbook.</p>\n</li>\n<li>\n<p><strong>Remote Host:</strong>\nTo view the guestbook on a remote host, locate the external IP of the load balancer in the <strong>IP</strong> column of the <code>kubectl get services</code> output.\nFor example, run</p>\n</li>\n</ul>\n<pre><code>$ kubectl get svc\n\nNAME           TYPE           CLUSTER-IP     EXTERNAL-IP     PORT(S)                         AGE\nguestbook      LoadBalancer   172.21.2.187   47.101.74.131   3000:31459/TCP,4000:32099/TCP   35m\nkubernetes     ClusterIP      172.21.0.1     &lt;none&gt;          443/TCP                         104m\nredis-master   ClusterIP      172.21.10.81   &lt;none&gt;          6379/TCP                        86m\nredis-slave    ClusterIP      172.21.5.58    &lt;none&gt;          6379/TCP                        86m\n</code></pre>\n<p><code>47.101.74.131</code> is the external IP.\nVisit <code>http://47.101.74.131:3000</code> for the main guestbook.\n<img src=\"/img/docs/guestbook.jpg\" alt=\"Guestbook\"></p>\n<p>Visit <code>http://47.101.74.131:4000</code> for the sidecar guestbook.</p>\n<p><img src=\"/img/docs/guestbook-sidecar.jpg\" alt=\"Guestbook\"></p>\n<h2>Run a BroadcastJob to pre download a new image</h2>\n<p>First check that the nodes do not have images present. Below command should output nothing.</p>\n<pre><code>kubectl get nodes -o yaml | grep &quot;openkruise/guestbook:v2&quot;\n</code></pre>\n<p>Then, run a broadcastjob to download the images.</p>\n<p><code>kubect apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/broadcastjob.yaml</code></p>\n<p>Check the broadcastjob is completed. <code>bj</code> is short for <code>broadcastjob</code></p>\n<pre><code>$ kubectl get bj\nNAME             DESIRED   ACTIVE   SUCCEEDED   FAILED   AGE\ndownload-image   3         0        3           0        7s\n</code></pre>\n<p>Check the pods are completed.</p>\n<pre><code>$ kubectl get pods\nNAME                            READY   STATUS      RESTARTS   AGE\ndownload-image-v99xz            0/1     Completed   0          61s\ndownload-image-xmpkt            0/1     Completed   0          61s\ndownload-image-zc4t4            0/1     Completed   0          61s\n</code></pre>\n<p>Now run the same command and check that the images have been downloaded. The testing cluster has 3 nodes. So below command\nwill output three entries.</p>\n<pre><code>$ kubectl get nodes -o yaml | grep &quot;openkruise/guestbook:v2&quot;\n      - openkruise/guestbook:v2\n      - openkruise/guestbook:v2\n      - openkruise/guestbook:v2\n</code></pre>\n<p>The broadcastjob is configured with <code>ttlSecondsAfterFinished</code> to <code>60</code>, meaning the job and its associated pods will be deleted\nin <code>60</code> seconds after the job is finished.</p>\n<h2>Inplace-update guestbook to the new image</h2>\n<p>First, check the running pods.</p>\n<pre><code>$ kubectl get pod -L controller-revision-hash -o wide | grep guestbook\nNAME                            READY   STATUS    RESTARTS   AGE     IP             NODE                        NOMINATED NODE   CONTROLLER-REVISION-HASH\nguestbook-v1-0                  1/1     Running   0          35s     172.29.1.21    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-1                  1/1     Running   0          35s     172.29.0.148   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-10                 1/1     Running   0          33s     172.29.1.23    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-11                 1/1     Running   0          33s     172.29.0.151   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-12                 1/1     Running   0          32s     172.29.0.152   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-13                 1/1     Running   0          32s     172.29.0.153   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-14                 1/1     Running   0          32s     172.29.0.27    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-15                 1/1     Running   0          31s     172.29.0.28    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-16                 1/1     Running   0          31s     172.29.1.24    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-17                 1/1     Running   0          30s     172.29.0.29    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-18                 1/1     Running   0          30s     172.29.0.154   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-19                 1/1     Running   0          30s     172.29.1.25    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-2                  1/1     Running   0          35s     172.29.0.22    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-3                  1/1     Running   0          35s     172.29.0.149   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-4                  1/1     Running   0          35s     172.29.0.23    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-5                  1/1     Running   0          35s     172.29.1.22    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-6                  1/1     Running   0          35s     172.29.0.24    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-7                  1/1     Running   0          34s     172.29.0.150   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-8                  1/1     Running   0          34s     172.29.0.25    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-9                  1/1     Running   0          34s     172.29.0.26    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\n</code></pre>\n<p>Run this command to patch the statefulset to use the new image.</p>\n<p><code>kubectl apply -f https://raw.githubusercontent.com/kruiseio/kruise/master/docs/tutorial/v1/guestbook-statefulset-v2.yaml</code></p>\n<p>In particular, the difference is that the image version is updated to <code>v2</code> and partition is set to <code>15</code>, meaning that the pods with\nordinal larger than or equal to <code>15</code> will be updated to v2. The rest pods will remain at <code>v1</code></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spec:</span>\n    <span class=\"hljs-string\">...</span>\n<span class=\"hljs-attr\">      containers:</span>\n<span class=\"hljs-attr\">      - name:</span> <span class=\"hljs-string\">guestbook</span>\n<span class=\"hljs-attr\">-       image:</span> <span class=\"hljs-string\">openkruise/guestbook:v1</span>\n<span class=\"hljs-string\">+</span>       <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">openkruise/guestbook:v2</span>\n<span class=\"hljs-attr\">  podManagementPolicy:</span> <span class=\"hljs-string\">Parallel</span>  <span class=\"hljs-comment\"># allow parallel updates, works together with maxUnavailable</span>\n<span class=\"hljs-attr\">  updateStrategy:</span>\n<span class=\"hljs-attr\">    type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n<span class=\"hljs-attr\">    rollingUpdate:</span>\n      <span class=\"hljs-comment\"># Do in-place update if possible, currently only image update is supported for in-place update</span>\n<span class=\"hljs-attr\">      podUpdatePolicy:</span> <span class=\"hljs-string\">InPlaceIfPossible</span>\n      <span class=\"hljs-comment\"># Allow parallel updates with max number of unavailable instances equals to 2</span>\n<span class=\"hljs-attr\">      maxUnavailable:</span> <span class=\"hljs-number\">3</span>\n<span class=\"hljs-string\">+</span>     <span class=\"hljs-attr\">partition:</span> <span class=\"hljs-number\">15</span>\n</code></pre>\n<p>Check the statefulset, find the statefulset has 5 pods updated</p>\n<pre><code>$ kubectl get sts.apps.kruise.io\n\nNAME           DESIRED   CURRENT   UPDATED   READY   AGE\nguestbook-v1   20        20        5         20      18h\n</code></pre>\n<p>Check the pods again. <code>guestbook-v1-15</code> to <code>guestbook-v1-19</code> are updated with <code>RESTARTS</code> showing <code>1</code>,\nIPs remain the same, <code>CONTROLLER-REVISION-HASH</code> are updated from <code>guestbook-v1-7c947b5f94</code> to <code>guestbook-v1-576bd76785</code></p>\n<pre><code>$ kubectl get pod -L controller-revision-hash -o wide | grep guestbook\n\nNAME                            READY   STATUS    RESTARTS   AGE     IP             NODE                        NOMINATED NODE   CONTROLLER-REVISION-HASH\nguestbook-v1-0                  1/1     Running   0          3m22s   172.29.1.21    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-1                  1/1     Running   0          3m22s   172.29.0.148   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-10                 1/1     Running   0          3m20s   172.29.1.23    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-11                 1/1     Running   0          3m20s   172.29.0.151   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-12                 1/1     Running   0          3m19s   172.29.0.152   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-13                 1/1     Running   0          3m19s   172.29.0.153   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-14                 1/1     Running   0          3m19s   172.29.0.27    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-15                 1/1     Running   1          3m18s   172.29.0.28    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-576bd76785\nguestbook-v1-16                 1/1     Running   1          3m18s   172.29.1.24    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-576bd76785\nguestbook-v1-17                 1/1     Running   1          3m17s   172.29.0.29    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-576bd76785\nguestbook-v1-18                 1/1     Running   1          3m17s   172.29.0.154   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-576bd76785\nguestbook-v1-19                 1/1     Running   1          3m17s   172.29.1.25    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-576bd76785\nguestbook-v1-2                  1/1     Running   0          3m22s   172.29.0.22    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-3                  1/1     Running   0          3m22s   172.29.0.149   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-4                  1/1     Running   0          3m22s   172.29.0.23    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-5                  1/1     Running   0          3m22s   172.29.1.22    cn-shanghai.192.168.1.113   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-6                  1/1     Running   0          3m22s   172.29.0.24    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-7                  1/1     Running   0          3m21s   172.29.0.150   cn-shanghai.192.168.1.112   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-8                  1/1     Running   0          3m21s   172.29.0.25    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\nguestbook-v1-9                  1/1     Running   0          3m21s   172.29.0.26    cn-shanghai.192.168.1.114   &lt;none&gt;           guestbook-v1-7c947b5f94\n</code></pre>\n<p>Now set <code>partition</code> to <code>0</code>, all pods will be updated to v2 this time, and all pods' IP remain <code>unchanged</code>. You should also find\nthat all 20 pods are updated fairly soon because 1) new images are already pre-downloaded, 2) the <code>maxUnavailable</code> feature allows parallel updates instead of sequential</p>\n<pre><code>$ kubectl get sts.apps.kruise.io\nNAME           DESIRED   CURRENT   UPDATED   READY   AGE\nguestbook-v1   20        20        20        20      18h\n</code></pre>\n<p>Describe a pod and find that the events show the original container is killed and new container is started. This verifies <code>in-place</code> update</p>\n<pre><code>$ kubectl describe pod guestbook-v1-0\n\n...\nEvents:\n  Type    Reason   Age                From                                Message\n  ----    ------   ----               ----                                -------\n  Normal  Created  10m (x2 over 18h)  kubelet, 192.168.1.107  Created container\n  Normal  Started  10m (x2 over 18h)  kubelet, 192.168.1.107  Started container\n  Normal  Killing  10m                kubelet, 192.168.1.107  Killing container with id docker://guestbook:Container spec hash changed (4055768332 vs 2933593838).. Container will be killed and recreated.\n  Normal  Pulled   10m                kubelet, 192.168.1.107  Container image &quot;openkruise/guestbook:v3&quot; already present on machine\n</code></pre>\n<p>The pods should also be in <code>Ready</code> state, the <code>InPlaceUpdateReady</code> will be set to <code>False</code> right before in-place update and to <code>True</code> after update is complete</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">Readiness</span> <span class=\"hljs-attr\">Gates:</span>\n  <span class=\"hljs-string\">Type</span>                 <span class=\"hljs-string\">Status</span>\n  <span class=\"hljs-string\">InPlaceUpdateReady</span>   <span class=\"hljs-literal\">True</span>\n<span class=\"hljs-attr\">Conditions:</span>\n  <span class=\"hljs-string\">Type</span>                 <span class=\"hljs-string\">Status</span>\n  <span class=\"hljs-string\">InPlaceUpdateReady</span>   <span class=\"hljs-literal\">True</span>  <span class=\"hljs-comment\"># Should be False right before in-place update and True after update is complete</span>\n  <span class=\"hljs-string\">Initialized</span>          <span class=\"hljs-literal\">True</span>\n  <span class=\"hljs-string\">Ready</span>                <span class=\"hljs-literal\">True</span>  <span class=\"hljs-comment\"># Should be True after in-place update is complete</span>\n  <span class=\"hljs-string\">ContainersReady</span>      <span class=\"hljs-literal\">True</span>\n  <span class=\"hljs-string\">PodScheduled</span>         <span class=\"hljs-literal\">True</span>\n</code></pre>\n",
  "link": "/en-us/docs/guestbook.html",
  "meta": {}
}