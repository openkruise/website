{
  "filename": "broadcastjob.md",
  "__html": "<h1>BroadcastJob</h1>\n<p>This controller distributes a Pod on every node in the cluster. Like a\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\">DaemonSet</a>,\na BroadcastJob makes sure a Pod is created and run on all selected nodes once\nin a cluster.\nLike a <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\">Job</a>,\na BroadcastJob is expected to run to completion.</p>\n<p>In the end, BroadcastJob does not consume any resources after each Pod succeeds on\nevery node.\nThis controller is particularly useful when upgrading a software, e.g., Kubelet, or validation check\nin every node, which is typically needed only once within a long period of time or\nrunning an adhoc full cluster inspection script.</p>\n<p>Optionally, a BroadcastJob can keep alive after all Pods on desired nodes complete\nso that a Pod will be automatically launched for every new node after it is added to\nthe cluster.</p>\n<h2>BroadcastJob Spec</h2>\n<h3>Template</h3>\n<p><code>Template</code> describes the Pod template used to run the job.\nNote that for the Pod restart policy, only <code>Never</code> or <code>OnFailure</code> is allowed for\nBroadcastJob.</p>\n<h3>Parallelism</h3>\n<p><code>Parallelism</code> specifies the maximal desired number of Pods that should be run at\nany given time. By default, there's no limit.</p>\n<p>For example, if a cluster has ten nodes and <code>Parallelism</code> is set to three, there can only be\nthree pods running in parallel. A new Pod is created only after one running Pod finishes.</p>\n<h3>CompletionPolicy</h3>\n<p><code>CompletionPolicy</code> specifies the controller behavior when reconciling the BroadcastJob.</p>\n<h4><code>Always</code></h4>\n<p><code>Always</code> policy means the job will eventually complete with either failed or succeeded\ncondition. The following parameters take effect with this policy:</p>\n<ul>\n<li>\n<p><code>ActiveDeadlineSeconds</code> specifies the duration in seconds relative to the startTime\nthat the job may be active before the system tries to terminate it.\nFor example, if <code>ActiveDeadlineSeconds</code> is set to 60 seconds, after the BroadcastJob starts\nrunning for 60 seconds, all the running pods will be deleted and the job will be marked\nas Failed.</p>\n</li>\n<li>\n<p><code>BackoffLimit</code> specifies the number of retries before marking this job failed.\nCurrently, the number of retries are defined as the aggregated number of restart\ncounts across all Pods created by the job, i.e., the sum of the\n<a href=\"https://github.com/kruiseio/kruise/blob/d61c12451d6a662736c4cfc48682fa75c73adcbc/vendor/k8s.io/api/core/v1/types.go#L2314\">ContainerStatus.RestartCount</a>\nfor all containers in every Pod.  If this value exceeds <code>BackoffLimit</code>, the job is marked\nas Failed and all running Pods are deleted. No limit is enforced if <code>BackoffLimit</code> is\nnot set.</p>\n</li>\n<li>\n<p><code>TTLSecondsAfterFinished</code> limits the lifetime of a BroadcastJob that has finished execution\n(either Complete or Failed). For example, if TTLSecondsAfterFinished is set to 10 seconds,\nthe job will be kept for 10 seconds after it finishes. Then the job along with all the Pods\nwill be deleted.</p>\n</li>\n</ul>\n<h4><code>Never</code></h4>\n<p><code>Never</code> policy means the BroadcastJob will never be marked as Failed or Succeeded even if\nall Pods run to completion. This also means above <code>ActiveDeadlineSeconds</code>, <code>BackoffLimit</code>\nand <code>TTLSecondsAfterFinished</code> parameters takes no effect if <code>Never</code> policy is used.\nFor example, if user wants to perform an initial configuration validation for every newly\nadded node in the cluster, he can deploy a BroadcastJob with <code>Never</code> policy.</p>\n<h2>Examples</h2>\n<h4>Monitor BroadcastJob status</h4>\n<p>Assuming the cluster has only one node, run <code>kubectl get bj</code> (shortcut name for BroadcastJob) and\nwe will see the following:</p>\n<pre><code> NAME                 DESIRED   ACTIVE   SUCCEEDED   FAILED\n broadcastjob-sample  1         0        1           0\n</code></pre>\n<ul>\n<li><code>Desired</code> : The number of desired Pods. This equals to the number of matched nodes in the cluster.</li>\n<li><code>Active</code>: The number of active Pods.</li>\n<li><code>SUCCEEDED</code>: The number of succeeded Pods.</li>\n<li><code>FAILED</code>: The number of failed Pods.</li>\n</ul>\n<h4>Use <code>ttlSecondsAfterFinished</code></h4>\n<p>Run a BroadcastJob that each Pod computes a pi, with <code>ttlSecondsAfterFinished</code> set to 30.\nThe job will be deleted in 30 seconds after it is finished.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">BroadcastJob</span>\n<span class=\"hljs-attr\">metadata:</span>\n<span class=\"hljs-attr\">  name:</span> <span class=\"hljs-string\">broadcastjob-ttl</span>\n<span class=\"hljs-attr\">spec:</span>\n<span class=\"hljs-attr\">  template:</span>\n<span class=\"hljs-attr\">    spec:</span>\n<span class=\"hljs-attr\">      containers:</span>\n<span class=\"hljs-attr\">        - name:</span> <span class=\"hljs-string\">pi</span>\n<span class=\"hljs-attr\">          image:</span> <span class=\"hljs-string\">perl</span>\n<span class=\"hljs-attr\">          command:</span> <span class=\"hljs-string\">[\"perl\",</span>  <span class=\"hljs-string\">\"-Mbignum=bpi\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"-wle\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"print bpi(2000)\"</span><span class=\"hljs-string\">]</span>\n<span class=\"hljs-attr\">      restartPolicy:</span> <span class=\"hljs-string\">Never</span>\n<span class=\"hljs-attr\">  completionPolicy:</span>\n<span class=\"hljs-attr\">    type:</span> <span class=\"hljs-string\">Always</span>\n<span class=\"hljs-attr\">    ttlSecondsAfterFinished:</span> <span class=\"hljs-number\">30</span>\n</code></pre>\n<h4>Use <code>activeDeadlineSeconds</code></h4>\n<p>Run a BroadcastJob that each Pod sleeps for 50 seconds, with <code>activeDeadlineSeconds</code> set to 10 seconds.\nThe job will be marked as Failed after it runs for 10 seconds, and the running Pods will be deleted.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">BroadcastJob</span>\n<span class=\"hljs-attr\">metadata:</span>\n<span class=\"hljs-attr\">  name:</span> <span class=\"hljs-string\">broadcastjob-active-deadline</span>\n<span class=\"hljs-attr\">spec:</span>\n<span class=\"hljs-attr\">  template:</span>\n<span class=\"hljs-attr\">    spec:</span>\n<span class=\"hljs-attr\">      containers:</span>\n<span class=\"hljs-attr\">        - name:</span> <span class=\"hljs-string\">sleep</span>\n<span class=\"hljs-attr\">          image:</span> <span class=\"hljs-string\">busybox</span>\n<span class=\"hljs-attr\">          command:</span> <span class=\"hljs-string\">[\"sleep\",</span>  <span class=\"hljs-string\">\"50000\"</span><span class=\"hljs-string\">]</span>\n<span class=\"hljs-attr\">      restartPolicy:</span> <span class=\"hljs-string\">Never</span>\n<span class=\"hljs-attr\">  completionPolicy:</span>\n<span class=\"hljs-attr\">    type:</span> <span class=\"hljs-string\">Always</span>\n<span class=\"hljs-attr\">    activeDeadlineSeconds:</span> <span class=\"hljs-number\">10</span>\n</code></pre>\n<h4>Use <code>Never</code> completionPolicy</h4>\n<p>Run a BroadcastJob with <code>Never</code> completionPolicy. The job will continue to run even if all Pods\nhave completed on all nodes.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">BroadcastJob</span>\n<span class=\"hljs-attr\">metadata:</span>\n<span class=\"hljs-attr\">  name:</span> <span class=\"hljs-string\">broadcastjob-never-complete</span>\n<span class=\"hljs-attr\">spec:</span>\n<span class=\"hljs-attr\">  template:</span>\n<span class=\"hljs-attr\">    spec:</span>\n<span class=\"hljs-attr\">      containers:</span>\n<span class=\"hljs-attr\">        - name:</span> <span class=\"hljs-string\">sleep</span>\n<span class=\"hljs-attr\">          image:</span> <span class=\"hljs-string\">busybox</span>\n<span class=\"hljs-attr\">          command:</span> <span class=\"hljs-string\">[\"sleep\",</span>  <span class=\"hljs-string\">\"5\"</span><span class=\"hljs-string\">]</span>\n<span class=\"hljs-attr\">      restartPolicy:</span> <span class=\"hljs-string\">Never</span>\n<span class=\"hljs-attr\">  completionPolicy:</span>\n<span class=\"hljs-attr\">    type:</span> <span class=\"hljs-string\">Never</span>\n</code></pre>\n",
  "link": "/en-us/docs/broadcastjob.html",
  "meta": {}
}