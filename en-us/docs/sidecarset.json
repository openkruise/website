{
  "filename": "sidecarset.md",
  "__html": "<h1>SidecarSet</h1>\n<p>This controller leverages the admission webhook to automatically\ninject a sidecar container for every selected Pod when the Pod is created. The Sidecar\ninjection process is similar to the automatic sidecar injection mechanism used in\n<a href=\"https://istio.io/docs/setup/kubernetes/additional-setup/sidecar-injection/\">istio</a>.</p>\n<p>Besides injection during Pod creation, SidecarSet controller also provides\nadditional capabilities such as in-place Sidecar container image upgrade, mounting Sidecar volumes, etc.\nBasically, SidecarSet decouples the Sidecar container lifecycle\nmanagement from the main container lifecycle management.</p>\n<p>The SidecarSet is preferable for managing stateless sidecar containers such as\nmonitoring tools or operation agents.</p>\n<h2>Example</h2>\n<h3>Create SidecarSet</h3>\n<p>The <code>sidecarset.yaml</code> file below describes a SidecarSet that contains a sidecar container named <code>sidecar1</code>:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># sidecarset.yaml</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test-sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecar1</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">centos:6.7</span>\n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">[\"sleep\",</span> <span class=\"hljs-string\">\"999d\"</span><span class=\"hljs-string\">]</span> <span class=\"hljs-comment\"># do nothing at all</span>\n    <span class=\"hljs-attr\">volumeMounts:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">log-volume</span>\n    <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/log</span>\n  <span class=\"hljs-attr\">volumes:</span> <span class=\"hljs-comment\"># this field will be merged into pod.spec.volumes</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">log-volume</span>\n    <span class=\"hljs-attr\">emptyDir:</span> <span class=\"hljs-string\">{}</span>\n</code></pre>\n<p>Create a SidecarSet based on the YAML file:</p>\n<pre><code class=\"language-bash\">kubectl apply -f sidecarset.yaml\n</code></pre>\n<h3>Create a Pod</h3>\n<p>Create a pod that matches the sidecarset's selector:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Pod</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span> <span class=\"hljs-comment\"># matches the SidecarSet's selector</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test-pod</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">app</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:1.15.1</span>\n</code></pre>\n<p>Create this pod and now you will find it's injected with <code>sidecar1</code>:</p>\n<pre><code class=\"language-bash\">$ kubectl get pod\nNAME       READY   STATUS    RESTARTS   AGE\n<span class=\"hljs-built_in\">test</span>-pod   2/2     Running   0          118s\n</code></pre>\n<p>In the meantime, the SidecarSet status updated:</p>\n<pre><code class=\"language-bash\">$ kubectl get sidecarset <span class=\"hljs-built_in\">test</span>-sidecarset -o yaml | grep -A4 status\nstatus:\n  matchedPods: 1\n  observedGeneration: 1\n  readyPods: 1\n  updatedPods: 1\n</code></pre>\n<h3>update sidecar container Image</h3>\n<p>update sidecarSet's sidecar container image=centos:7</p>\n<pre><code class=\"language-bash\">$ kubectl edit sidecarsets <span class=\"hljs-built_in\">test</span>-sidecarset\n\n<span class=\"hljs-comment\"># sidecarset.yaml</span>\napiVersion: apps.kruise.io/v1alpha1\nkind: SidecarSet\nmetadata:\n  name: <span class=\"hljs-built_in\">test</span>-sidecarset\nspec:\n  containers:\n    - name: sidecar1\n      image: centos:7\n</code></pre>\n<p>The Sidecar container in the pod has been updated to centos:7, and the pod and other containers have not been restarted.</p>\n<pre><code class=\"language-bash\">$ kubectl get pods |grep <span class=\"hljs-built_in\">test</span>-pod\n<span class=\"hljs-built_in\">test</span>-pod                            2/2     Running   1          7m34s\n\n$ kubectl get pods <span class=\"hljs-built_in\">test</span>-pod -o yaml |grep <span class=\"hljs-string\">'image: centos'</span>\n    image: centos:7\n\n$ kubectl describe pods <span class=\"hljs-built_in\">test</span>-pod\nEvents:\n  Type    Reason     Age                 From               Message\n  ----    ------     ----                ----               -------\n  Normal  Killing    5m47s               kubelet            Container sidecar1 definition changed, will be restarted\n  Normal  Pulling    5m17s               kubelet            Pulling image <span class=\"hljs-string\">\"centos:7\"</span>\n  Normal  Created    5m5s (x2 over 12m)  kubelet            Created container sidecar1\n  Normal  Started    5m5s (x2 over 12m)  kubelet            Started container sidecar1\n  Normal  Pulled     5m5s                kubelet            Successfully pulled image <span class=\"hljs-string\">\"centos:7\"</span>\n</code></pre>\n<h2>SidecarSet features</h2>\n<p>A sample SidecarSet yaml looks like following:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n  <span class=\"hljs-attr\">initContainers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">init-container</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">busybox:latest</span>\n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">[</span> <span class=\"hljs-string\">\"/bin/sh\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"-c\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"sleep 5 &amp;&amp; echo 'init container success'\"</span> <span class=\"hljs-string\">]</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ns-1</span>\n</code></pre>\n<ul>\n<li>spec.selector Select the POD that needs to be injected and updated by Label. MatchLabels and MatchExpressions are supported. Please refer to the details: <a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/</a></li>\n<li>spec.containers Define pod.spec.containers[x] that need to be injected and updated, supporting the full K8S Container field. Please refer to the details: <a href=\"https://kubernetes.io/docs/concepts/containers/\">https://kubernetes.io/docs/concepts/containers/</a></li>\n<li>spec.initContainers Define the pod.spec.initContainers[x] you need to inject, supporting the full K8S InitContainer field. Please refer to the detailsï¼š<a href=\"https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\">https://kubernetes.io/docs/concepts/workloads/pods/init-containers/</a>\n<ul>\n<li>We will inject those containers by their name in ascending order</li>\n<li>InitContainers only support injection and do not support POD in-place update</li>\n</ul>\n</li>\n<li>spec.updateStrategy sidecarSet update strategy, type indicates the upgrade method:\n<ul>\n<li>NotUpdate No updates, in this type only inject sidecar containers in pod</li>\n<li>RollingUpdate Injection and rolling update, which contains a rich update strategy, will be described in more detail later</li>\n</ul>\n</li>\n<li>spec.namespace By default, sidecarset is cluster scope in k8s, that is, for all namespaces (except kube-system, kube-public). When spec.namespace field set, it only applies to pods of that namespace</li>\n</ul>\n<h3>sidecar container injection</h3>\n<p>The injection of sidecar containers happens at Pod creation time and only Pod spec is updated. The workload template spec will not be updated.\nIn addition to the default K8s Container field, the following fields have been extended to injection:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">containers:</span>\n    <span class=\"hljs-comment\"># default K8s Container fields</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n    <span class=\"hljs-attr\">volumeMounts:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/nginx/conf</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx.conf</span>\n    <span class=\"hljs-comment\"># extended sidecar container fields</span>\n    <span class=\"hljs-attr\">podInjectPolicy:</span> <span class=\"hljs-string\">BeforeAppContainer</span>\n    <span class=\"hljs-attr\">shareVolumePolicy:</span>\n      <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">enabled</span> <span class=\"hljs-string\">|</span> <span class=\"hljs-string\">disabled</span>\n    <span class=\"hljs-attr\">transferEnv:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">sourceContainerName:</span> <span class=\"hljs-string\">main</span>\n      <span class=\"hljs-attr\">envName:</span> <span class=\"hljs-string\">PROXY_IP</span>    \n  <span class=\"hljs-attr\">volumes:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">nginx.conf</span>\n    <span class=\"hljs-attr\">hostPath:</span> <span class=\"hljs-string\">/data/nginx/conf</span>\n</code></pre>\n<ul>\n<li>podInjectPolicy Define where Containers are injected into pod.spec.containers\n<ul>\n<li>BeforeAppContainer(default) Inject into the front of the original pod containers</li>\n<li>AfterAppContainer Inject into the backend of the original pod containers</li>\n</ul>\n</li>\n<li>data volume sharing\n<ul>\n<li>Share specific volumes: Use spec.volumes to define the volumes needed by Sidecar itself. See detailsï¼š<a href=\"https://kubernetes.io/docs/concepts/storage/volumes/\">https://kubernetes.io/docs/concepts/storage/volumes/</a></li>\n<li>Share pod containers volumes: If ShareVolumePolicy.type is enabled, the sidecar container will share the other container's VolumeMounts in the pod(don't contains the injected sidecar container)</li>\n</ul>\n</li>\n<li>Environment variable sharing\n<ul>\n<li>Environment variables can be fetched from another container through spec.containers[x].transferenv, and the environment variable named envName from the container named sourceContainerName is copied to this container</li>\n</ul>\n</li>\n</ul>\n<h3>sidecarset update strategy</h3>\n<p>Sidecarset not only supports the in-place update of Sidecar container, but also provides a very rich upgrade strategy.</p>\n<h4>partition</h4>\n<p>Partition is the <strong>desired number or percent of Pods in old revisions</strong>, defaults to <code>0</code>.  This field does <strong>NOT</strong> imply any update order.</p>\n<p>When <code>partition</code> is set during update:</p>\n<ul>\n<li>If it is a number: <code>(replicas - partition)</code> number of pods will be updated with the new version.</li>\n<li>If it is a percent: <code>(replicas * (100% - partition))</code> number of pods will be updated with the new version.</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">partition:</span> <span class=\"hljs-number\">90</span>\n</code></pre>\n<p>Assuming that the number of PODs associated with this Sidecarset is 100, this upgrade will only upgrade 10 pods to latest and keep 90 pods old versions.</p>\n<h4>MaxUnavailable</h4>\n<p>MaxUnavailable is the maximum number of PODs that are unavailable at the same time that is guaranteed during the Posting process. The default value is 1.</p>\n<p>The user can set it to either an absolute value or a percentage (the percentage is calculated by the controller as the cardinality of the selected pod to calculate the absolute value behind one).</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">20</span><span class=\"hljs-string\">%</span>\n</code></pre>\n<p>Note that maxUnavailable and partition are not necessarily related. For example:</p>\n<ul>\n<li>When {matched pod}=100,partition=50,maxUnavailable=10, the controller will update 50 PODS to the new version, and only 10 PODS will be updated at the same time, until the 50 updated is completed.</li>\n<li>When {matched pod}=100,partition=80,maxUnavailable=30, the controller will update 20 PODS to the new version, because the maxUnavailable number is 30, so the 20 PODS will be updated simultaneously.</li>\n</ul>\n<h4>Pause</h4>\n<p>A user can pause the release by setting pause to true, and the injection capability will remain for newly created, expanded PODS, while updated PODS will remain the updated version, and those that have not been updated will be paused.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">paused:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<h4>Selector</h4>\n<p>For businesses that have Canary update requirements, this can be done through Strategy.selector filed. First: take the canary updated pods on fixed labels [canary. Release] = true, second fix the strategy.selector.MatchLabels to select the pod</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">selector:</span>\n      <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">canary.release:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<h3>sidecarset update order</h3>\n<ul>\n<li>The PODs of upgrade is sorted by default to ensure the same order of multiple upgrades</li>\n<li>The default priority is (the smaller the higher the priority)ï¼š unscheduled &lt; scheduled, pending &lt; unknown &lt; running, not-ready &lt; ready, newer pods &lt; older pods</li>\n<li>scatter order</li>\n</ul>\n<h4>scatter</h4>\n<p>The scatter policy allows users to define the scatters of PODs that conform to certain tags throughout the publishing process.\nFor example, if a SidecarSet manages 10 PODS, if there are 3 PODS below with the tag foo=bar, and the user sets this tag in the shatter policy, then these 3 PODS will be published in the 1st, 6th, and 10th positions.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">scatterStrategy:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">foo</span>\n      <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">bar</span>\n</code></pre>\n<p><strong>Note: If you use Scatter, it is recommended to set only a pair of key-values for scatter. It will be easier to understand.</strong></p>\n<h3>SidecarSet Status</h3>\n<p>When upgrading sidecar containers with a SidecarSet, you can observe the process of upgrading through SidecarSet.Status</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># kubectl describe sidecarsets sidecarset-example</span>\n<span class=\"hljs-attr\">Name:</span>         <span class=\"hljs-string\">sidecarset-example</span>\n<span class=\"hljs-attr\">Kind:</span>         <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">Status:</span>\n  <span class=\"hljs-attr\">Matched Pods:</span>         <span class=\"hljs-number\">10</span>  <span class=\"hljs-comment\"># The number of PODs injected and managed by the Sidecarset</span>\n  <span class=\"hljs-attr\">Updated Pods:</span>         <span class=\"hljs-number\">5</span>   <span class=\"hljs-comment\"># 5 PODs have been updated to the container version in the latest SidecarSet</span>\n  <span class=\"hljs-attr\">Ready Pods:</span>           <span class=\"hljs-number\">8</span>   <span class=\"hljs-comment\"># Matched Pods pod.status.condition.Ready = true number</span>\n  <span class=\"hljs-attr\">Updated Ready Pods:</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-comment\"># Updated Pods &amp;&amp; Ready Pods number</span>\n</code></pre>\n",
  "link": "/en-us/docs/sidecarset.html",
  "meta": {
    "title": "SidecarSet"
  }
}