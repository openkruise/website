{
  "filename": "sidecarset.md",
  "__html": "<h1>SidecarSet</h1>\n<p>这个控制器支持通过 admission webhook 来自动为集群中创建的符合条件的 Pod 注入 sidecar 容器。\n这个注入过程和 <a href=\"https://istio.io/docs/setup/kubernetes/additional-setup/sidecar-injection/\">istio</a>\n的自动注入方式很类似。\n除了在 Pod 创建时候注入外，SidecarSet 还提供了为运行时 Pod 原地升级其中已经注入的 sidecar 容器镜像的能力。</p>\n<p>简单来说，SidecarSet 将 sidecar 容器的定义和生命周期与业务容器解耦。\n它主要用于管理无状态的 sidecar 容器，比如监控、日志等 agent。</p>\n<h2>范例</h2>\n<h3>创建 SidecarSet</h3>\n<p>如下的 sidecarset.yaml 定义了一个 SidecarSet，其中包括了一个名为 sidecar1 的 sidecar 容器：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># sidecarset.yaml</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test-sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecar1</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">centos:6.7</span>\n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">[\"sleep\",</span> <span class=\"hljs-string\">\"999d\"</span><span class=\"hljs-string\">]</span> <span class=\"hljs-comment\"># do nothing at all</span>\n    <span class=\"hljs-attr\">volumeMounts:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">log-volume</span>\n    <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/log</span>\n  <span class=\"hljs-attr\">volumes:</span> <span class=\"hljs-comment\"># this field will be merged into pod.spec.volumes</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">log-volume</span>\n    <span class=\"hljs-attr\">emptyDir:</span> <span class=\"hljs-string\">{}</span>\n</code></pre>\n<p>创建这个 YAML:</p>\n<pre><code class=\"language-bash\">kubectl apply -f sidecarset.yaml\n</code></pre>\n<h3>创建 Pod</h3>\n<p>定义一个匹配 SidecarSet selector 的 Pod：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Pod</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span> <span class=\"hljs-comment\"># matches the SidecarSet's selector</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">test-pod</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">app</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:1.15.1</span>\n</code></pre>\n<p>创建这个 Pod，你会发现其中被注入了 sidecar1 容器：</p>\n<pre><code class=\"language-bash\">$ kubectl get pod\nNAME       READY   STATUS    RESTARTS   AGE\n<span class=\"hljs-built_in\">test</span>-pod   2/2     Running   0          118s\n</code></pre>\n<p>此时，SidecarSet status 被更新为：</p>\n<pre><code class=\"language-bash\">$ kubectl get sidecarset <span class=\"hljs-built_in\">test</span>-sidecarset -o yaml | grep -A4 status\nstatus:\n  matchedPods: 1\n  observedGeneration: 1\n  readyPods: 1\n  updatedPods: 1\n</code></pre>\n<h3>更新sidecar container Image</h3>\n<p>更新sidecarSet中sidecar container的image=centos:7</p>\n<pre><code class=\"language-bash\">$ kubectl edit sidecarsets <span class=\"hljs-built_in\">test</span>-sidecarset\n\n<span class=\"hljs-comment\"># sidecarset.yaml</span>\napiVersion: apps.kruise.io/v1alpha1\nkind: SidecarSet\nmetadata:\n  name: <span class=\"hljs-built_in\">test</span>-sidecarset\nspec:\n  containers:\n    - name: sidecar1\n      image: centos:7\n</code></pre>\n<p>此时，发现pod中的sidecar容器已经被更新为了centos:7，并且pod以及其它的容器没有重启。</p>\n<pre><code class=\"language-bash\">$ kubectl get pods |grep <span class=\"hljs-built_in\">test</span>-pod\n<span class=\"hljs-built_in\">test</span>-pod                            2/2     Running   1          7m34s\n\n$ kubectl get pods <span class=\"hljs-built_in\">test</span>-pod -o yaml |grep <span class=\"hljs-string\">'image: centos'</span>\n    image: centos:7\n\n$ kubectl describe pods <span class=\"hljs-built_in\">test</span>-pod\nEvents:\n  Type    Reason     Age                 From               Message\n  ----    ------     ----                ----               -------\n  Normal  Killing    5m47s               kubelet            Container sidecar1 definition changed, will be restarted\n  Normal  Pulling    5m17s               kubelet            Pulling image <span class=\"hljs-string\">\"centos:7\"</span>\n  Normal  Created    5m5s (x2 over 12m)  kubelet            Created container sidecar1\n  Normal  Started    5m5s (x2 over 12m)  kubelet            Started container sidecar1\n  Normal  Pulled     5m5s                kubelet            Successfully pulled image <span class=\"hljs-string\">\"centos:7\"</span>\n</code></pre>\n<h2>SidecarSet功能说明</h2>\n<p>一个简单的 SidecarSet yaml 文件如下：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">containers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n  <span class=\"hljs-attr\">initContainers:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">init-container</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">busybox:latest</span>\n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">[</span> <span class=\"hljs-string\">\"/bin/sh\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"-c\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"sleep 5 &amp;&amp; echo 'init container success'\"</span> <span class=\"hljs-string\">]</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ns-1</span>\n</code></pre>\n<ul>\n<li>spec.selector 通过label的方式选择需要注入、更新的pod，支持matchLabels、MatchExpressions两种方式，详情请参考：<a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/</a></li>\n<li>spec.containers 定义需要注入、更新的pod.spec.containers容器，支持完整的k8s container字段，详情请参考：<a href=\"https://kubernetes.io/docs/concepts/containers/\">https://kubernetes.io/docs/concepts/containers/</a></li>\n<li>spec.initContainers 定义需要注入的pod.spec.initContainers容器，支持完整的k8s initContainer字段，详情请参考：<a href=\"https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\">https://kubernetes.io/docs/concepts/workloads/pods/init-containers/</a>\n<ul>\n<li>注入initContainers容器默认基于container name升级排序</li>\n<li>initContainers只支持注入，不支持pod原地升级</li>\n</ul>\n</li>\n<li>spec.updateStrategy sidecarSet更新策略，type表明升级方式：\n<ul>\n<li>NotUpdate 不更新，此模式下只会包含注入能力</li>\n<li>RollingUpdate 注入+滚动更新，包含了丰富的滚动更新策略，后面会详细介绍</li>\n</ul>\n</li>\n<li>spec.namespace sidecarset默认在k8s整个集群范围内生效，即对所有的命名空间生效（除了kube-system, kube-public），当设置该字段时，只对该namespace的pod生效</li>\n</ul>\n<h3>sidecar container注入</h3>\n<p>sidecar 的注入只会发生在 Pod 创建阶段，并且只有 Pod spec 会被更新，不会影响 Pod 所属的 workload template 模板。\nspec.containers除了默认的k8s container字段，还扩展了如下一些字段，来方便注入：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">containers:</span>\n    <span class=\"hljs-comment\"># default K8s Container fields</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n    <span class=\"hljs-attr\">volumeMounts:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/nginx/conf</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx.conf</span>\n    <span class=\"hljs-comment\"># extended sidecar container fields</span>\n    <span class=\"hljs-attr\">podInjectPolicy:</span> <span class=\"hljs-string\">BeforeAppContainer</span>\n    <span class=\"hljs-attr\">shareVolumePolicy:</span>\n      <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">enabled</span> <span class=\"hljs-string\">|</span> <span class=\"hljs-string\">disabled</span>\n    <span class=\"hljs-attr\">transferEnv:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">sourceContainerName:</span> <span class=\"hljs-string\">main</span>\n      <span class=\"hljs-attr\">envName:</span> <span class=\"hljs-string\">PROXY_IP</span>    \n  <span class=\"hljs-attr\">volumes:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">Name:</span> <span class=\"hljs-string\">nginx.conf</span>\n    <span class=\"hljs-attr\">hostPath:</span> <span class=\"hljs-string\">/data/nginx/conf</span>\n</code></pre>\n<ul>\n<li>podInjectPolicy 定义container注入到pod.spec.containers中的位置\n<ul>\n<li>BeforeAppContainer(默认) 注入到pod原containers的前面</li>\n<li>AfterAppContainer 注入到pod原containers的后面</li>\n</ul>\n</li>\n<li>数据卷共享\n<ul>\n<li>共享指定卷：通过 spec.volumes 来定义 sidecar 自身需要的 volume，详情请参考：<a href=\"https://kubernetes.io/docs/concepts/storage/volumes/\">https://kubernetes.io/docs/concepts/storage/volumes/</a></li>\n<li>共享所有卷：通过 spec.containers[i].shareVolumePolicy.type = enabled | disabled 来控制是否挂载pod应用容器的卷，常用于日志收集等 sidecar，配置为 enabled 后会把应用容器中所有挂载点注入 sidecar 同一路经下(sidecar中本身就有声明的数据卷和挂载点除外）</li>\n</ul>\n</li>\n<li>环境变量共享\n<ul>\n<li>可以通过 spec.containers[i].transferEnv 来从别的容器获取环境变量，会把名为 sourceContainerName 容器中名为 envName 的环境变量拷贝到本容器</li>\n</ul>\n</li>\n</ul>\n<h3>sidecar更新策略</h3>\n<p>SidecarSet不仅支持sidecar容器的原地升级，而且提供了非常丰富的升级、灰度策略。</p>\n<h4>分批发布</h4>\n<p>Partition 的语义是 <strong>保留旧版本 Pod 的数量或百分比</strong>，默认为 <code>0</code>。这里的 <code>partition</code> 不表示任何 <code>order</code> 序号。</p>\n<p>如果在发布过程中设置了 <code>partition</code>:</p>\n<ul>\n<li>如果是数字，控制器会将 <code>(replicas - partition)</code> 数量的 Pod 更新到最新版本。</li>\n<li>如果是百分比，控制器会将 <code>(replicas * (100% - partition))</code> 数量的 Pod 更新到最新版本。</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">partition:</span> <span class=\"hljs-number\">90</span>\n</code></pre>\n<p>假设该SidecarSet关联的pod数量是100个，则本次升级只会升级10个，保留90个。</p>\n<h4>最大不可用数量</h4>\n<p>MaxUnavailable 是发布过程中保证的，同一时间下最大不可用的 Pod 数量，默认值为 1。用户可以将其设置为绝对值或百分比（百分比会被控制器按照selected pod做基数来计算出一个背后的绝对值）。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">maxUnavailable:</span> <span class=\"hljs-number\">20</span><span class=\"hljs-string\">%</span>\n</code></pre>\n<p>注意，maxUnavailable 和 partition 两个值是没有必然关联。举例：</p>\n<ul>\n<li>当 {matched pod}=100,partition=50,maxUnavailable=10，控制器会发布 50 个 Pod 到新版本，但是发布窗口为 10，即同一时间只会发布 10 个 Pod，每发布好一个 Pod 才会再找一个发布，直到 50 个发布完成。</li>\n<li>当 {matched pod}=100,partition=80,maxUnavailable=30，控制器会发布 20 个 Pod 到新版本，因为满足 maxUnavailable 数量，所以这 20 个 Pod 会同时发布。</li>\n</ul>\n<h4>发布暂停</h4>\n<p>用户可以通过设置 paused 为 true 暂停发布，此时对于新创建的、扩容的pod依旧会实现注入能力，已经更新的pod会保持更新后的版本不动，还没有更新的pod会暂停更新。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">paused:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<h4>金丝雀发布</h4>\n<p>对于有金丝雀发布需求的业务，可以通过strategy.selector来实现。方式：对于需要率先金丝雀灰度的pod打上固定的labels[canary.release] = true，再通过strategy.selector.matchLabels来选中该pod</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">selector:</span>\n      <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">canary.release:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n<h3>发布顺序控制</h3>\n<ul>\n<li>默认对升级的pod排序，保证多次升级的顺序一致</li>\n<li>默认选择优先顺序是（越小优先级越高）： unscheduled &lt; scheduled, pending &lt; unknown &lt; running, not-ready &lt; ready, newer pods &lt; older pods</li>\n<li>scatter打散排序</li>\n</ul>\n<h4>scatter打散顺序</h4>\n<p>打散策略允许用户定义将符合某些标签的 Pod 打散到整个发布过程中。比如，一个 SidecarSet所管理的pod为10，如果下面有 3 个 Pod 带有 foo=bar 标签，且用户在打散策略中设置了这个标签，那么这 3 个 Pod 会被放在第 1、6、10 个位置发布。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sidecarset</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">scatterStrategy:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">foo</span>\n      <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">bar</span>\n</code></pre>\n<p><strong>注意：如果使用 scatter 策略，建议只设置一对 key-value 做打散，会比较好理解。</strong></p>\n<h3>SidecarSet状态说明</h3>\n<p>通过sidecarset原地升级sidecar容器时，可以通过SidecarSet.Status来观察升级的过程</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># kubectl describe sidecarsets sidecarset-example</span>\n<span class=\"hljs-attr\">Name:</span>         <span class=\"hljs-string\">sidecarset-example</span>\n<span class=\"hljs-attr\">Kind:</span>         <span class=\"hljs-string\">SidecarSet</span>\n<span class=\"hljs-attr\">Status:</span>\n  <span class=\"hljs-attr\">Matched Pods:</span>         <span class=\"hljs-number\">10</span>  <span class=\"hljs-comment\"># 该sidecarset注入、管理的pod数量</span>\n  <span class=\"hljs-attr\">Updated Pods:</span>         <span class=\"hljs-number\">5</span>   <span class=\"hljs-comment\"># 5个pod已经更新到最新的SidecarSet中的容器版本</span>\n  <span class=\"hljs-attr\">Ready Pods:</span>           <span class=\"hljs-number\">8</span>   <span class=\"hljs-comment\"># Matched Pods中pod.status.condition.Ready = true的数量</span>\n  <span class=\"hljs-attr\">Updated Ready Pods:</span>   <span class=\"hljs-number\">3</span>   <span class=\"hljs-comment\"># Updated Pods &amp;&amp; Ready Pods数量</span>\n</code></pre>\n",
  "link": "/zh-cn/docs/sidecarset.html",
  "meta": {
    "title": "SidecarSet"
  }
}