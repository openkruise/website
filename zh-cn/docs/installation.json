{
  "filename": "installation.md",
  "__html": "<h1>安装 OpenKruise</h1>\n<p>OpenKruise 要求 Kubernetes 版本高于 1.13+，注意在 1.13 和 1.14 版本中必须先在 kube-apiserver 中打开 <code>CustomResourceWebhookConversion</code> feature-gate。</p>\n<h2>通过 helm charts 安装</h2>\n<p>建议采用 helm v3.1+ 来安装 Kruise，helm 是一个简单的命令行工具可以从 <a href=\"https://github.com/helm/helm/releases\">这里</a> 获取。</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># Kubernetes 1.13 或 1.14 版本</span>\nhelm install kruise https://github.com/openkruise/kruise/releases/download/v0.8.0/kruise-chart.tgz --<span class=\"hljs-built_in\">disable</span>-openapi-validation\n\n<span class=\"hljs-comment\"># Kubernetes 1.15 和更新的版本</span>\nhelm install kruise https://github.com/openkruise/kruise/releases/download/v0.8.0/kruise-chart.tgz\n</code></pre>\n<h2>通过 helm charts 升级</h2>\n<p>如果你在使用旧版本的 Kruise，建议为了安全性和更丰富的功能，升级到最新版本：</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># Kubernetes 1.13 and 1.14</span>\nhelm upgrade kruise https://github.com/openkruise/kruise/releases/download/v0.8.0/kruise-chart.tgz --<span class=\"hljs-built_in\">disable</span>-openapi-validation\n\n<span class=\"hljs-comment\"># Kubernetes 1.15 and newer versions</span>\nhelm upgrade kruise https://github.com/openkruise/kruise/releases/download/v0.8.0/kruise-chart.tgz\n</code></pre>\n<p>注意：</p>\n<ol>\n<li>在升级之前，<strong>必须</strong> 先阅读 <a href=\"https://github.com/openkruise/kruise/blob/master/CHANGELOG.md\">Change Log</a> ，确保你已经了解新版本的不兼容变化。</li>\n<li>如果你要重置之前旧版本上用的参数或者配置一些新参数，建议在 <code>helm upgrade</code> 命令里加上 <code>--reset-values</code>。</li>\n</ol>\n<h2>可选项</h2>\n<p>注意直接安装 chart 会使用默认的 template values，你也可以根据你的集群情况指定一些特殊配置，比如修改 resources 限制或者配置 feature-gates。</p>\n<h3>可选: chart 安装参数</h3>\n<p>下表展示了 chart 所有可配置的参数和它们的默认值：</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>featureGates</code></td>\n<td>Feature gates for Kruise, empty string means all enabled</td>\n<td>``</td>\n</tr>\n<tr>\n<td><code>manager.log.level</code></td>\n<td>Log level that kruise-manager printed</td>\n<td><code>4</code></td>\n</tr>\n<tr>\n<td><code>manager.replicas</code></td>\n<td>Replicas of kruise-controller-manager deployment</td>\n<td><code>2</code></td>\n</tr>\n<tr>\n<td><code>manager.image.repository</code></td>\n<td>Repository for kruise-manager image</td>\n<td><code>openkruise/kruise-manager</code></td>\n</tr>\n<tr>\n<td><code>manager.image.tag</code></td>\n<td>Tag for kruise-manager image</td>\n<td><code>v0.8.0</code></td>\n</tr>\n<tr>\n<td><code>manager.resources.limits.cpu</code></td>\n<td>CPU resource limit of kruise-manager container</td>\n<td><code>100m</code></td>\n</tr>\n<tr>\n<td><code>manager.resources.limits.memory</code></td>\n<td>Memory resource limit of kruise-manager container</td>\n<td><code>256Mi</code></td>\n</tr>\n<tr>\n<td><code>manager.resources.requests.cpu</code></td>\n<td>CPU resource request of kruise-manager container</td>\n<td><code>100m</code></td>\n</tr>\n<tr>\n<td><code>manager.resources.requests.memory</code></td>\n<td>Memory resource request of kruise-manager container</td>\n<td><code>256Mi</code></td>\n</tr>\n<tr>\n<td><code>manager.metrics.port</code></td>\n<td>Port of metrics served</td>\n<td><code>8080</code></td>\n</tr>\n<tr>\n<td><code>manager.webhook.port</code></td>\n<td>Port of webhook served</td>\n<td><code>9443</code></td>\n</tr>\n<tr>\n<td><code>manager.nodeAffinity</code></td>\n<td>Node affinity policy for kruise-manager pod</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>manager.nodeSelector</code></td>\n<td>Node labels for kruise-manager pod</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>manager.tolerations</code></td>\n<td>Tolerations for kruise-manager pod</td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td><code>daemon.log.level</code></td>\n<td>Log level that kruise-daemon printed</td>\n<td><code>4</code></td>\n</tr>\n<tr>\n<td><code>daemon.port</code></td>\n<td>Port of metrics and healthz that kruise-daemon served</td>\n<td><code>10221</code></td>\n</tr>\n<tr>\n<td><code>daemon.resources.limits.cpu</code></td>\n<td>CPU resource limit of kruise-daemon container</td>\n<td><code>50m</code></td>\n</tr>\n<tr>\n<td><code>daemon.resources.limits.memory</code></td>\n<td>Memory resource limit of kruise-daemon container</td>\n<td><code>64Mi</code></td>\n</tr>\n<tr>\n<td><code>daemon.resources.requests.cpu</code></td>\n<td>CPU resource request of kruise-daemon container</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>daemon.resources.requests.memory</code></td>\n<td>Memory resource request of kruise-daemon container</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>daemon.affinity</code></td>\n<td>Affinity policy for kruise-daemon pod</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>daemon.socketLocation</code></td>\n<td>Location of the container manager control socket</td>\n<td><code>/var/run</code></td>\n</tr>\n<tr>\n<td><code>webhookConfiguration.failurePolicy.pods</code></td>\n<td>The failurePolicy for pods in mutating webhook configuration</td>\n<td><code>Ignore</code></td>\n</tr>\n<tr>\n<td><code>webhookConfiguration.timeoutSeconds</code></td>\n<td>The timeoutSeconds for all webhook configuration</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>crds.managed</code></td>\n<td>Kruise will not install CRDs with chart if this is false</td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p>这些参数可以通过 <code>--set key=value[,key=value]</code> 参数在 <code>helm install</code> 或 <code>helm upgrade</code> 命令中生效。</p>\n<h3>可选: feature-gate</h3>\n<p>Feature-gate 控制了 Kruise 中一些有影响性的功能：</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Default</th>\n<th>Side effect (if closed)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>PodWebhook</code></td>\n<td>Whether to open a webhook for Pod <strong>create</strong></td>\n<td><code>true</code></td>\n<td>SidecarSet disabled</td>\n</tr>\n<tr>\n<td><code>KruiseDaemon</code></td>\n<td>Whether to deploy <code>kruise-daemon</code> DaemonSet</td>\n<td><code>true</code></td>\n<td>Image pulling disabled</td>\n</tr>\n</tbody>\n</table>\n<p>如果你要配置 feature-gate，只要在安装或升级时配置参数：</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># one</span>\n$ helm install kruise https://... --<span class=\"hljs-built_in\">set</span> featureGates=<span class=\"hljs-string\">\"PodWebhook=false\"</span>\n\n<span class=\"hljs-comment\"># or more</span>\n$ helm install kruise https://... --<span class=\"hljs-built_in\">set</span> featureGates=<span class=\"hljs-string\">\"PodWebhook=false\\,KruiseDaemon=false\"</span>\n</code></pre>\n<h3>可选: 中国本地镜像</h3>\n<p>如果你在中国、并且很难从官方 DockerHub 上拉镜像，那么你可以使用托管在阿里云上的镜像仓库：</p>\n<pre><code class=\"language-bash\">$ helm install kruise https://... --<span class=\"hljs-built_in\">set</span>  manager.image.repository=openkruise-registry.cn-hangzhou.cr.aliyuncs.com/openkruise/kruise-manager\n</code></pre>\n<h2>卸载</h2>\n<p>注意：卸载会导致所有 Kruise 下的资源都会删除掉，包括 webhook configurations, services, namespace, CRDs, CR instances 以及所有 Kruise workload 下的 Pod。 请务必谨慎操作！</p>\n<p>卸载使用 helm chart 安装的 Kruise：</p>\n<pre><code class=\"language-bash\">$ helm uninstall kruise\nrelease <span class=\"hljs-string\">\"kruise\"</span> uninstalled\n</code></pre>\n",
  "link": "/zh-cn/docs/installation.html",
  "meta": {
    "title": "安装"
  }
}